Lab 7
7.1Write a program in YACC to design a suitable grammar for evaluation of
arithmetic expression having +, -, * and /.
Code
LEX
%{
#include<stdio.h>
#include<stdlib.h>
#include "y.tab.h"
extern int yylval;
%}
%%
[0-9]+ {yylval=atoi(yytext);return num;}
[\t ] ;
\n {return 0;}
. {return yytext[0];}
%%
int yywrap()
{
}
YACC
%{
#include<stdio.h>
#include<stdlib.h>
int yyerror(const char *s);
int yylex(void);
%}
%token num;
%left '+' '-'
%left '*' '/'
%left ')'
%left '('
42
%%
s:e {printf("Valid expression!\n");
 printf("Result:%d\n",$$);
 exit(0);
 }
;
e:e'+'e {$$=$1+$3;}
|e'-'e {$$=$1-$3;}
|e'*'e {$$=$1*$3;}
|e'/'e {$$=$1/$3;}
|'('e')' {$$=$2;}
|num {$$=$1;}
;
%%
void main()
{
printf("Enter an arithmetic expression:\n");
yyparse();
}
int yyerror(const char *s)
{
printf("Invalid expression!\n");
return 0;
}
